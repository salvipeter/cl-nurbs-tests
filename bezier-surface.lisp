(defparameter *coords*
  '((((-0.00806045 31.2519 117.651)(14.4171 31.9057 117.679)(27.7981 34.9185 117.585)(40.1691 40.2576 117.416)(51.5235 47.9291 117.162)(61.7919 58 116.732))((61.7919 58 116.732)(90.2694 58 88.317)(112.069 58 57.5069)(122.979 58 16.2585)(130.802 58 -20.5266)(131.793 58 -60))((131.793 58 -60)(115.054 35.1668 -60.0013)(100.724 11.2073 -60.0014)(88.8044 -13.8787 -60.0003)(79.2944 -40.0911 -59.9978)(72.1941 -67.4299 -59.9941))((72.1941 -67.4299 -59.9941)(62.9878 -66.2955 -42.4298)(51.1652 -65.4363 -29.1269)(36.7264 -64.8523 -20.0853)(19.6713 -64.5436 -15.3051)(0 -64.5101 -14.7862))((0 -64.5101 -14.7862)(0 -36.3233 4.04866)(4.53111e-05 -2.2995 18.0926)(-0.00272643 13.8761 51.97)(0.00707212 16.1017 87.2205)(-0.00806045 31.2519 117.651)))(((18.5214 14.3186 87.5676)(41.7224 19.5036 86.7267)(59.4366 27.4048 86.6997)(77.4582 42.7083 87.6846))((77.4582 42.7083 87.6846)(100.329 42.0901 59.0961)(109.157 39.7513 16.2144)(112.997 36.586 -22.2067))((112.997 36.586 -22.2067)(93.239 12.1366 -29.0679)(79.8979 -12.7702 -33.6268)(70.1994 -38.3946 -37.7032))((70.1994 -38.3946 -37.7032)(57.3487 -36.9224 -18.9247)(40.9943 -35.9647 -7.50476)(20.5543 -38.0702 4.24952))((20.5543 -38.0702 4.24952)(17.5712 2.40748 12.6467)(16.5224 16.1132 53.1497)(18.5214 14.3186 87.5676))))
  "Exported from Sketches.")

(let ((*resolution* 30)
      (*centralized-line-sweep* nil)
      (*ribbon-multiplier* 1.0d0)
      (points (points-from-angles (cons 2 (butlast (uniform-angles (length (first *coords*))))))))
  (write-constraint-grid points "/tmp/grid.vtk" :coords *coords*)
  (write-constraint-ribbons points "/tmp/ribbons.vtk" :coords *coords* :resolution 20)
  (write-patch points 'corner "/tmp/spider.vtk"
	       :coords *coords* :distance-type 'bilinear :spider t)
  (write-patch points 'corner "/tmp/patch.vtk"
	       :coords *coords* :distance-type 'bilinear))
